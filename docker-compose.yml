version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.4-debian-11
#    restart: always
    ports:
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "127.0.0.1:9092", "--topic", "meta_events", "--describe"]
      interval: 15s
      timeout: 5s
      retries: 5

  init-kafka:
    image: ghcr.io/kneu-messenger-pigeon/init-kafka:main
    environment:
      - KAFKA_HOST=kafka:9092
    depends_on:
      kafka:
        condition: service_started

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8092:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8080"]
      interval: 15s
      timeout: 5s
      retries: 3


  dekanat:
    build:
      context: ./dekanat/
      dockerfile: ./Dockerfile
    container_name: dekanat
    ports:
      - "3050:3050"
    restart: always
    environment:
      ISC_PASSWORD: 3kWA9f5ah7
      TZ: Europe/Kyiv
    volumes:
      - "dekanat_data:/firebird/data"
      - "./dekanat/restore:/firebird/restore"

  storage:
    image: redis:7.0.7-alpine
    restart: always
    ports:
      - '6400:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
    driver: local

  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  dekanat_data:
    driver: local
